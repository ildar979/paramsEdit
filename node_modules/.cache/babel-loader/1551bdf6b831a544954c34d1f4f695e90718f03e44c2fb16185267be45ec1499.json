{"ast":null,"code":"var _jsxFileName = \"/home/ildar/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/practice/paramsEdit/src/components/paramEditor/ParamEditor.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ParamEditor = ({\n  params,\n  model\n}) => {\n  _s();\n  const [paramValues, setParamValues] = useState(model.paramValues);\n  const handleParamChange = (paramId, value) => {\n    const updatedParamValues = paramValues.map(paramValue => {\n      if (paramValue.paramId === paramId) {\n        return {\n          ...paramValue,\n          value\n        };\n      }\n      return paramValue;\n    });\n    setParamValues(updatedParamValues);\n  };\n  const getModel = () => {\n    return {\n      paramValues\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: params.map(param => {\n      var _paramValues$find;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: param.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: ((_paramValues$find = paramValues.find(pv => pv.paramId === param.id)) === null || _paramValues$find === void 0 ? void 0 : _paramValues$find.value) || '',\n          onChange: e => handleParamChange(param.id, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)]\n      }, param.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(ParamEditor, \"XdNZMNNCH5DK7R2BkBJeL90CFqQ=\");\n_c = ParamEditor;\nexport default ParamEditor;\nvar _c;\n$RefreshReg$(_c, \"ParamEditor\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ParamEditor","params","model","_s","paramValues","setParamValues","handleParamChange","paramId","value","updatedParamValues","map","paramValue","getModel","className","children","param","_paramValues$find","name","fileName","_jsxFileName","lineNumber","columnNumber","type","find","pv","id","onChange","e","target","_c","$RefreshReg$"],"sources":["/home/ildar/Рабочий стол/practice/paramsEdit/src/components/paramEditor/ParamEditor.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { IParamValue, IProps } from './interfaces';\nimport './style.css';\n\n\n\nconst ParamEditor = ({ params, model }: IProps) => {\n  const [paramValues, setParamValues] = useState<IParamValue[]>(model.paramValues);\n\n  const handleParamChange = (paramId: number, value: string) => {\n    const updatedParamValues = paramValues.map((paramValue) => {\n      if (paramValue.paramId === paramId) {\n        return { ...paramValue, value };\n      }\n      return paramValue;\n    });\n    setParamValues(updatedParamValues);\n  };\n\n  const getModel = () => {\n    return { paramValues };\n  };\n\n  return (\n    <div className='container'>\n      {params.map((param) => (\n        <div className='content' key={param.id}>\n          <label>{param.name}</label>\n          <input\n            type=\"text\"\n            value={paramValues.find((pv) => pv.paramId === param.id)?.value || ''}\n            onChange={(e) => handleParamChange(param.id, e.target.value)}\n          />\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default ParamEditor;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIrB,MAAMC,WAAW,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EACjD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAgBK,KAAK,CAACE,WAAW,CAAC;EAEhF,MAAME,iBAAiB,GAAGA,CAACC,OAAe,EAAEC,KAAa,KAAK;IAC5D,MAAMC,kBAAkB,GAAGL,WAAW,CAACM,GAAG,CAAEC,UAAU,IAAK;MACzD,IAAIA,UAAU,CAACJ,OAAO,KAAKA,OAAO,EAAE;QAClC,OAAO;UAAE,GAAGI,UAAU;UAAEH;QAAM,CAAC;MACjC;MACA,OAAOG,UAAU;IACnB,CAAC,CAAC;IACFN,cAAc,CAACI,kBAAkB,CAAC;EACpC,CAAC;EAED,MAAMG,QAAQ,GAAGA,CAAA,KAAM;IACrB,OAAO;MAAER;IAAY,CAAC;EACxB,CAAC;EAED,oBACEL,OAAA;IAAKc,SAAS,EAAC,WAAW;IAAAC,QAAA,EACvBb,MAAM,CAACS,GAAG,CAAEK,KAAK;MAAA,IAAAC,iBAAA;MAAA,oBAChBjB,OAAA;QAAKc,SAAS,EAAC,SAAS;QAAAC,QAAA,gBACtBf,OAAA;UAAAe,QAAA,EAAQC,KAAK,CAACE;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC3BtB,OAAA;UACEuB,IAAI,EAAC,MAAM;UACXd,KAAK,EAAE,EAAAQ,iBAAA,GAAAZ,WAAW,CAACmB,IAAI,CAAEC,EAAE,IAAKA,EAAE,CAACjB,OAAO,KAAKQ,KAAK,CAACU,EAAE,CAAC,cAAAT,iBAAA,uBAAjDA,iBAAA,CAAmDR,KAAK,KAAI,EAAG;UACtEkB,QAAQ,EAAGC,CAAC,IAAKrB,iBAAiB,CAACS,KAAK,CAACU,EAAE,EAAEE,CAAC,CAACC,MAAM,CAACpB,KAAK;QAAE;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9D,CAAC;MAAA,GAN0BN,KAAK,CAACU,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOjC,CAAC;IAAA,CACP;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAClB,EAAA,CA/BIH,WAAW;AAAA6B,EAAA,GAAX7B,WAAW;AAiCjB,eAAeA,WAAW;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}